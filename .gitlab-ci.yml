stages:
  - build
  - deploy
  - reload

webpack:
  stage: build
  image: node:16
  script:
    - npm install
    - npm run lint
    - npm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 day

.docker-compose:
  tags:
    - mainsimweb-docker
  dependencies: []
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build:docker-mainsimweb:
  extends: .docker-compose
  stage: build
  script:
    - cd daemons/mainsimweb
    - pwd
    - docker compose build --parallel --pull
    - docker compose push

deploy:docker-mainsimweb:
  only:
    - master
  extends: .docker-compose
  stage: deploy
  script:
    - cd daemons/mainsimweb
    - docker compose pull --include-deps
    - docker compose up --no-build --remove-orphans --detach

deploy:mainsimweb:
  only:
    - master
  stage: deploy
  tags:
    - mainsimweb
    - httpd
  dependencies:
    - webpack
  script:
    - rsync -arv --delete dist/ /var/www/html

deploy:mainsim:
  only:
    - master
  stage: deploy
  tags:
    - mainsim
    - deploy
    - httpd
  dependencies:
    - webpack
  script:
    - rsync -av --delete dist/ /var/www/html
    - rsync -av --delete daemons/mainsim /opt/mainsimstatus/daemons/
    - cp -v /opt/mainsimstatus/daemons/mainsim/systemd/*.service /etc/systemd/system/
